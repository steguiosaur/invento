%%%%%%%%%%%%%%%%%%%%%%%%%%%%% DEFAULT TEXT FILE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\documentclass[12pt,a4paper]{article}
\usepackage[utf8]{inputenc}             % Default unicode
\usepackage{hyperref}
%\usepackage[none]{hyphenat}             % Disables wordbreak
\tolerance=1
\emergencystretch=\maxdimen
\hyphenpenalty=10000
\hbadness=10000

\renewcommand{\indent}{\hspace\parindent}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% DOCUMENT LAYOUT %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\usepackage{geometry}
\geometry{headheight=16pt, margin=1in}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%% IMAGES & GRAPHICS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\usepackage{graphicx}                      % images
\graphicspath{ {../screenshots} }

\usepackage{fontawesome}     %\faicon      % icons

\usepackage{pifont}    %\ding{118}         % symbols

\usepackage{tikz}                           % graphics
%\usetikzlibrary{shapes.geometric, arrows}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% MATH SYNTAX %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%\usepackage{amsmath, amssymb}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% PROGRAMMING %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\usepackage{listings,xcolor}
\definecolor{backcolour}{rgb}{0.96,0.96,0.96}
\definecolor{dkgreen}{rgb}{0,0.6,0}
\definecolor{gray}{rgb}{0.5,0.5,0.5}
\definecolor{mauve}{rgb}{0.58,0,0.82}
\definecolor{darkerblue}{HTML}{010161}

\lstset{
    language=Python,
    showstringspaces=false,
    columns=flexible,
    basicstyle=\ttfamily\footnotesize,
    numbers=none,                    
    backgroundcolor=\color{backcolour},   
    numberstyle=\tiny\color{gray},
    keywordstyle=\color{blue},
    commentstyle=\color{dkgreen},
    stringstyle=\color{mauve},
    keepspaces=false,                 
    numbersep=5pt,                  
    showspaces=false,                
    showstringspaces=false,
    breaklines=true,
    breakatwhitespace=false,
    tabsize=2,
    postbreak=\mbox{\textcolor{red}{$\hookrightarrow$}\space}
}

\usepackage{fancyhdr}
\pagestyle{fancy}
\fancyhf{}
\fancyhead[L]{\color{darkerblue} Discrete Structures II}
\fancyhead[C]{}
\fancyhead[R]{\color{darkerblue} Invento Documentation $\|$ \partname{} \thepart{}}
\fancyfoot[L]{}
\fancyfoot[C]{\thepage}
\fancyfoot[R]{}
% Remove the line in the header
\renewcommand{\headrulewidth}{0pt}
%\renewcommand{\footrulewidth}{0.4pt}



\usepackage[edges]{forest}

\definecolor{foldercolor}{RGB}{124,166,198}

\tikzset{pics/folder/.style={code={%
    \node[inner sep=0pt, minimum size=#1](-foldericon){};
    \node[folder style, inner sep=0pt, minimum width=0.3*#1, minimum height=0.6*#1, above right, xshift=0.05*#1] at (-foldericon.west){};
    \node[folder style, inner sep=0pt, minimum size=#1] at (-foldericon.center){};}
    },
    pics/folder/.default={20pt},
    folder style/.style={draw=foldercolor!80!black,top color=foldercolor!40,bottom color=foldercolor}
}

\forestset{is file/.style={edge path'/.expanded={%
        ([xshift=\forestregister{folder indent}]!u.parent anchor) |- (.child anchor)},
        inner sep=1pt},
    this folder size/.style={edge path'/.expanded={%
        ([xshift=\forestregister{folder indent}]!u.parent anchor) |- (.child anchor) pic[solid]{folder=#1}}, inner ysep=0.6*#1},
    folder tree indent/.style={before computing xy={l=#1}},
    folder icons/.style={folder, this folder size=#1, folder tree indent=3*#1},
    folder icons/.default={12pt},
}


%%%%%%%%%%%%%%%%%%%%%%%%% TABLE OF CONTENTS SETTINGS %%%%%%%%%%%%%%%%%%%%%%%%
%\usepackage{titletoc, tocloft}
%\renewcommand{\cftpartleader}{\cftdotfill{\cftdotsep}}  % for parts
%\renewcommand\thepart{\arabic{part}}                    % number system
%\setlength{\cftsecindent}{1cm}                          % indent section
\renewcommand{\contentsname}{\Huge\bfseries Table of Contents}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% DOCUMENT %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{document}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% TITLE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    \thispagestyle{empty}
    \pagenumbering{roman}
    \addcontentsline{toc}{section}{Title page}

    \vspace*{\fill}
    \begingroup
    \centering

        \textbf{POLYTECHNIC UNIVERSITY OF THE PHILIPPINES\\
        BACHELOR OF SCIENCE IN COMPUTER SCIENCE}\vspace{.1in}

        \noindent\includegraphics[width=3in,height=3in]{logo.png}\vspace{.1in}

        \textbf{DISCRETE STRUCTURES II}\vspace{.1in}
        
        \textbf{\huge Invento Management System Documentation}\vspace{2in}

    \endgroup
    \vspace*{\fill}

        \noindent\textbf{BSCS 2-1N\\Group 3}\vspace{0.2in}

        \noindent
        \begin{tabular}{l l}
            \textbf{Project Manager:} & Annalyn Belen \\
            \textbf{Designer:} & Monika Jea Ng\\
            \textbf{Developer:} & Steve Pabular \\
            \textbf{Systems Analyst:} & John Nicolas Oandasan\\
            \textbf{Business Analyst:} & Hazel Conception\\
            \textbf{Technical Writer:} & Percian Cayaban
        \end{tabular}\vspace{0.2in}

        \noindent\textbf{Instructor:} Prof. Angie Payne

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%% TABLE OF CONTENTS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    \newpage
    \thispagestyle{plain}
    \addcontentsline{toc}{section}{Contents}
    \tableofcontents

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% CONTENT %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    \newpage
    \pagenumbering{arabic}
    \setcounter{page}{1}
    \part{ Invento Management System }

    \section*{Overview \hrulefill}
        \addcontentsline{toc}{section}{Overview}
        \indent
        \texttt{Invento} is an inventory management system that allows users to 
        manage their inventory of products, track sales, and view sales data in 
        real-time. The system supports multiple user roles, including \texttt{Admin} 
        and \texttt{User} accounts, and provides other variety of features.

        \noindent\hrulefill

    \section*{Features}
        \addcontentsline{toc}{section}{Features}

        \begin{enumerate}
            \item{\textbf{Login and Registration}} - To access the system, users must 
                first register an account or log in with an existing account. This 
                feature allows tracking whose changes were implemented in the 
                inventory. This also saves the current session for future access.
            \item{\textbf{Admin and User Accounts}} - Users can control the inventory 
                and sales data. Administrators had access to additional features, 
                including the ability to reset inventory, delete accounts, and manage 
                user accounts.
            \item{\textbf{Sales Graph}} - Displays a line graph of sales data for the 
                past 7 days. The graph updates in real-time as new sales data is 
                entered into the system.
            \item{\textbf{Product Management}} - Users and admins can add, edit, and 
                remove products from the inventory. Changes can be seen in the table 
                displayed.
            \item{\textbf{Account Settings}} - Users and admin can change their 
                passwords and display pictures. They could also personalize the 
                themes of the program in settings.
        \end{enumerate}
        

    \section*{Setup}
        \addcontentsline{toc}{section}{Setup}

        This program requires the 3.10+ version of Python installed and the 
        following packages:

        \begin{itemize}
            \item \texttt{customtkinter}
            \item \texttt{Pillow}
            \item \texttt{matplotlib}
        \end{itemize}

        \noindent Which can be installed with the following command:

        \hfill{}

        \texttt{pip install --upgrade customtkinter Pillow matplotlib}

        \hfill{}

        \noindent There also is a detailed setup guide available at 
        \href{https://github.com/steguiosaur/invento}{\textcolor{blue}
        {https://github.com/steguiosaur/invento}}.


    \newpage
    \part{User Guide}

        \indent The program can be executed by using the command \texttt{python Main.py} in a terminal. If there aren't any dependency 
        conflicts and logged-in session, it will show the Login page 
        (Figure \ref{fig:login}) wherein it takes an input for the current 
        registered accounts.

        \begin{figure}[ht]
          \centering
          \includegraphics[width=5in,height=3in]{Login.png}
          \caption{Login page}
          \label{fig:login}
        \end{figure}

        \indent
        On this page (Figure \ref{fig:register}), you could register a new 
        account by entering the required information.

        \begin{figure}[ht]
          \centering
          \includegraphics[width=5in,height=3in]{Register.png}
          \caption{Register page}
          \label{fig:register}
        \end{figure}

        To access the inventory management system, log in with a valid username 
        and password. If you do not have an account, Click the "Create an account"
        button on the login page. Once you have created an account, you can log 
        in and begin using the system.

        After logging in, the Dashboard Tab (Figure \ref{fig:dashboard}) is shown. 
        It displays the overall changes done in the inventory and current number of
        users, products, categories, and total sales. 

        \begin{figure}[ht]
          \centering
          \includegraphics[width=5in,height=3in]{Dashboard.png}
          \caption{Dashboard Tab}
          \label{fig:dashboard}
        \end{figure}

        The Inventory Tab (Figure \ref{fig:inventory}), is where you manage the
        products, categories, and sales, There also is the search functionality that
        enables quickly look up for an item you desire to look into. If you wanted to
        sort the item based on stock, name, data modified, etc., you can click the
        header of the table to trigger it into ascending and descending order.

        \begin{figure}[ht]
          \centering
          \includegraphics[width=5in,height=3in]{Inventory.png}
          \caption{Inventory Tab}
          \label{fig:inventory}
        \end{figure}

    \newpage

        In this page (Figure \ref{fig:account}), is where you manage your account
        and view other accounts. There are two levels of permission given for an
        account, the \texttt{User Account} and the \texttt{Administrator Account}.
        User accounts can access the normal features given in the program, 
        like the inventory management feature. The latter, administrator account, 
        can access the whole features including account deletion, resetting the
        inventory, and changing permissions for user accounts.

        \begin{figure}[ht]
          \centering
          \includegraphics[width=5in,height=3in]{Account.png}
          \caption{Accounts Tab}
          \label{fig:account}
        \end{figure}

        The Settings Tab (Figure \ref{fig:settings}) handles all theme changes 
        and widget scaling. There currently are two appearances, the 
        \texttt{Light} and \texttt{Dark} appearance. The theme can be changed into 
        \texttt{blue}, \texttt{dark-blue}, and \texttt{green}. For the rest, you can 
        find out by trying the program.

        \begin{figure}[ht]
          \centering
          \includegraphics[width=5in,height=3in]{Settings.png}
          \caption{Settings Tab}
          \label{fig:settings}
        \end{figure}


    \newpage
    \part{ Process and Tools }
    
    \indent
    This software is built using modular, object-oriented structure, with focus on 
    readability, maintainability, and extensibility. It follows a traditional 
    Model-View-Controller (MVC) architecture, with separate components managing the 
    user interface, logic, and database interactions.

    \section*{Flowchart}
        \addcontentsline{toc}{section}{Flowchart}
        \includegraphics[width=\textwidth,height=5.5in]{Flowchart.png}

    \section*{Database}
        \addcontentsline{toc}{section}{Database}

        \indent
        Invento uses a relational database to store product data, sales data, and 
        account information. The database is managed using the Python \texttt{sqlite} 
        module, which provides a simple and efficient interface for executing SQL 
        queries and managing database connection.

    \section*{User Interface}
        \addcontentsline{toc}{section}{User Interface}

        \indent
        The user interface of this software is implemented using graphical user 
        interface (GUI) framework, such as \texttt{TKinter} and \texttt{Customtkinter}. We aimed for the interface design that is minimal, intuitive and user-friendly, 
        with a clean modern layout.

    \section*{Development Tools}
        \addcontentsline{toc}{section}{Development Tools}

        \indent The following tools are used to develop the program.

        \begin{enumerate}
            \item[\faCode]  \textbf{Programming Language} 
                \begin{enumerate}
                    \item[] \texttt{Python 3.10}
                \end{enumerate}
            \item[\faGears]  \textbf{Frameworks and Libraries} 
                \begin{enumerate}
                    \item[] \texttt{Customtkinter} - GUI framework/package
                    \item[] \texttt{TKinter} - GUI framework
                    \item[] \texttt{Pillow} - image processing
                    \item[] \texttt{Matplotlib} - data visualization
                \end{enumerate}
            \item[\faDatabase]  \textbf{Database and Configurations} 
                \begin{enumerate}
                    \item[] \texttt{SQLite3} - creates \texttt{*.db} file for database
                    \item[] \texttt{Configparser} - creates \texttt{*.ini} file for configurations
                \end{enumerate}
            \item[\faEdit]  \textbf{Text editor or Integrated Development Environment (IDE)} 
                \begin{enumerate}
                    \item[] \texttt{Neovim} - terminal based text editor
                    \item[] \texttt{Pycharm} - IDE
                \end{enumerate}
            \item[\faGithub]  \textbf{Version Control System (VCS)} 
                \begin{enumerate}
                    \item[] \texttt{Git} - local VCS
                    \item[] \texttt{Github} - \href{https://github.com/steguiosaur/invento}{\textcolor{blue}{https://github.com/steguiosaur/invento}}.
                \end{enumerate}
            \item[\faPaintBrush]  \textbf{Creative Tools} 
                \begin{enumerate}
                    \item[] \texttt{GIMP} - photo editor
                    \item[] \texttt{Inkscape} - vector graphics editor; used in logo creation
                    \item[] \texttt{Canva} - used in presentations
                    \item[] \texttt{Figma} - used for structuring GUI in early versions
                    \item[] \texttt{Dia} - flowchart
                \end{enumerate}
            \item[\faFileText]  \textbf{Mark-up Language} 
                \begin{enumerate}
                    \item[] \texttt{Markdown} - README files
                    \item[] \LaTeX{} - used for creating this documentation
                \end{enumerate}
        \end{enumerate}


    \newpage
    \part{ Code Documentation }

    There were several naming conventions used in the code.

    \begin{enumerate}
        \item[] \textbf{Pascal case} is used for \texttt{ClassNames}
        \item[] \textbf{Camel case} is used for \texttt{objectNames}
        \item[] \textbf{Snake case} is used for \texttt{function\_names} and \texttt{method\_names}
    \end{enumerate}

    \section*{File Structure}
    Invento packages and main file.\\
    \begin{forest}
        for tree={font=\sffamily, %grow'=0,
        folder indent=.9em, folder icons,
        edge=densely dotted}
        [\faFolder{} \texttt{invento} 
            [\texttt{customwidget}]
            [\texttt{pages}]
            [\texttt{tabs}]
            [\texttt{utils}]
            [\texttt{Main}, is file]]
    \end{forest}

    \noindent\texttt{customwidget} modules\\
    \begin{forest}
        for tree={font=\sffamily, %grow'=0,
        folder indent=.9em, folder icons,
        edge=densely dotted}
        [\faFolder{} \texttt{customwidget} 
            [\texttt{CtmTreeView}, is file]
            [\texttt{IntSpinBox}, is file]
            [\texttt{LoginBg}, is file]
            [\texttt{SalesGraph}, is file]]
    \end{forest}

    \noindent\texttt{pages} modules\\
    \begin{forest}
        for tree={font=\sffamily, %grow'=0,
        folder indent=.9em, folder icons,
        edge=densely dotted}
        [\faFolder{} \texttt{pages} 
            [\texttt{LoginPage}, is file]
            [\texttt{RegisterPage}, is file]
            [\texttt{InventoryPage}, is file]]
    \end{forest}

    \noindent\texttt{tabs} modules\\
    \begin{forest}
        for tree={font=\sffamily, %grow'=0,
        folder indent=.9em, folder icons,
        edge=densely dotted}
        [\faFolder{} \texttt{tabs} 
            [\texttt{AboutTab}, is file]
            [\texttt{AccountTab}, is file]
            [\texttt{DashboardTab}, is file]
            [\texttt{ProductTab}, is file]
            [\texttt{SettingsTab}, is file]]
    \end{forest}

    \noindent\texttt{utils} modules\\
    \begin{forest}
        for tree={font=\sffamily, %grow'=0,
        folder indent=.9em, folder icons,
        edge=densely dotted}
        [\faFolder{} \texttt{utils} 
            [\texttt{\small accounts}, is file]
            [\texttt{\small assets}, is file]
            [\texttt{\small dependencies}, is file]
            [\texttt{\small icons}, is file]
            [\texttt{\small itemdata}, is file]
            [\texttt{\small randompic}, is file]
            [\texttt{\small settings}, is file]]
    \end{forest}

    \section*{Main file}
        \addcontentsline{toc}{section}{Main file}

        \indent \texttt{Main.py} or the main file, is responsible for executing the app. 
        This can be triggered by using the command \texttt{python Main.py}. It is located at the root of the project with other packages.

    \begin{forest}
        for tree={font=\sffamily, %grow'=0,
        folder indent=.9em, folder icons,
        edge=densely dotted}
        [\faFolder{} \texttt{invento} 
            [\texttt{customwidget}]
            [\texttt{pages}]
            [\texttt{tabs}]
            [\texttt{utils}]
            [\texttt{Main}, is file]]
    \end{forest}

        \subsection*{\normalfont{\faCode{}} \textbf{Main.py}}
            \addcontentsline{toc}{subsection}{Main.py}

        \indent This first part of the code imports several modules from \texttt{utils} package. 
        It calls \texttt{dependency\_installer()} function from \texttt{dependencies} 
        module to automate the installation of packages that are not installed.
        \begin{lstlisting}
from utils import accounts, itemdata, settings, dependencies, Assets
dependencies.dependency_installer() # install dependencies
        \end{lstlisting}

        \hfill{}

        After the installation of required packages, it proceeds to import several 
        other packages. \texttt{Customtkinter} and \texttt{TKinter} are responsible 
        for creating the window where the frames will be placed. The \texttt{pages} 
        package imports all of its module [\texttt{LoginPage, RegisterPage, 
        InventoryPage}] to be added onto the frame dictionary.
        \begin{lstlisting}
from customtkinter import CTkFrame, set_appearance_mode, set_default_color_theme, set_widget_scaling
from tkinter import PhotoImage, Tk
from pages import *

class Main(Tk):
    def __init__(self):
        super().__init__()

        # creates container for frames
        container = CTkFrame(self)
        container.pack(side="top", fill="both", expand=True)
        container.grid_rowconfigure(0, weight=1)
        container.grid_columnconfigure(0, weight=1)

        self.frames = {} # create page dictionary
        for f in [InventoryPage, LoginPage, RegisterPage]:
            page = f.__name__
            frame = f(container, self)
            frame.grid(row=0, column=0, sticky="NSEW")
            self.frames[page] = frame
        \end{lstlisting}

        \hfill{}
        
        In this part, the \texttt{self.get\_session()} will display \texttt{InventoryPage} 
        if there is an account that is currently logged in. If not, it will display 
        \texttt{LoginPage} instead.
        \begin{lstlisting}
        # initialize starting frame
        self.get_session()

    # display selected page on top
    def show_frame(self, page, id=None):
        self.id = id
        self.frames[page].tkraise()

    # current logged in account
    def get_session(self):
        if accounts.get_session() is not None:
            self.show_frame("InventoryPage")
        else:
            self.show_frame("LoginPage")
        \end{lstlisting}

        \newpage
        The comment already explains what it does in this part.
        \begin{lstlisting}
# create database and admin account if not exists
accounts.create_table()
itemdata.create_inventory_table()

# initialize settings and themes
settings.initialize_config()
set_appearance_mode(settings.appearance_read())
set_default_color_theme(settings.theme_read())
set_widget_scaling(settings.int_scale_read())

# start application
app = Main()
app.title("Invento")
app.resizable(True, True)
width = 1024
height = 576
x = (app.winfo_screenwidth()/2) - width/2
y = (app.winfo_screenheight()/2) - height/2
app.geometry('%dx%d+%d+%d' % (width, height, x, y))
app.minsize(1024, 576)
app.iconphoto(True, PhotoImage(file=Assets.asset_path('logo.png')))
app.mainloop()
        \end{lstlisting}


    \section*{utils package}
        \addcontentsline{toc}{section}{utils package}

        \indent This package contains the overall functionality of the program. It 
        includes all modules that handle the database, file paths, generation 
        of image, configurations, and other miscellaneous functions.

    \noindent
    \begin{forest}
        for tree={font=\sffamily, %grow'=0,
        folder indent=.9em, folder icons,
        edge=densely dotted}
        [\faFolder{} \texttt{utils} 
            [\texttt{\small accounts}, is file]
            [\texttt{\small assets}, is file]
            [\texttt{\small dependencies}, is file]
            [\texttt{\small icons}, is file]
            [\texttt{\small itemdata}, is file]
            [\texttt{\small randompic}, is file]
            [\texttt{\small settings}, is file]]
    \end{forest}

        \subsection*{\normalfont{\faCode{}} \textbf{accounts.py}}
            \addcontentsline{toc}{subsection}{accounts.py}

        \indent The \texttt{accounts} module handles all account related 
        functionality. It connects itself to the database file named \texttt{invento.db} 
        and the database table named \texttt{accounts} and \texttt{sessions}. The 
        following are its functions:

        \begin{enumerate}
            \item[\ding{118}]\texttt{change\_pass(username, passwd, new\_passwd, confirm\_passwd)}

                - Verifies password changes. Used by \texttt{AccountTab} on 
                account settings.

            \item[\ding{118}]\texttt{count\_non\_admin\_accounts()}

                - Used by \texttt{DashboardTab} to display current users.

            \item[\ding{118}]\texttt{create\_table()}

            \item[\ding{118}]\texttt{delete\_all\_users()}

            \item[\ding{118}]\texttt{delete\_user(username)}

            \item[\ding{118}]\texttt{get\_all\_accounts()}

            \item[\ding{118}]\texttt{get\_permission\_level(username)}

            \item[\ding{118}]\texttt{get\_session()}

            \item[\ding{118}]\texttt{grant\_admin\_privilege(username)}

            \item[\ding{118}]\texttt{login(username, passwd)}

            \item[\ding{118}]\texttt{logout()}

            \item[\ding{118}]\texttt{register(username, passwd, confirm\_passwd, admin=False)}

            \item[\ding{118}]\texttt{remove\_admin\_privilege(username)}
            
        \end{enumerate}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% END %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\end{document}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% GUIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% IMAGE
%\includegraphics[width=\textwidth,height=4.5in]{image.png}
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% PROGRAMMING
%\begin{listings}[style=Java]
%    ... code
%\end{listings}
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% TABLE
%\begin{tabular}{c c c}
%    text & text & text
%\end{tabular}
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% MINIPAGE
%\begin{minipage}[t]{50pt}
%    \flushleft
%\end{minipage}
